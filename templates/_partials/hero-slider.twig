<section class="section-slider">
    <div class=" hero-slider position-relative">

        {% for block in entry.carousel.all() %}
            {% set asset = block.image[0] ?? null %}
            {% if asset | length %}
                {% set transformedBannerImages = craft.imager.transformImage(asset,
                    [
                        { width: 550, height:380, position: 'center-center', jpegQuality: 75,ratio: 4/3, cropZoom:1.5 },
                        { width: 768, height:380, position: asset.getFocalPoint(), ratio: 2/1, jpegQuality: 85, zoom: 1 },
                        { width: 1024, height:380, position: asset.getFocalPoint() ,jpegQuality: 95 },
                        { width: 1200, height:380, position: asset.getFocalPoint() },
                        { width: 2400, height:530, position: asset.getFocalPoint(),ratio: 2/1 }
                    ],
                    {
                        format: 'jpg',
                        allowUpscale: true,
                        mode: 'crop',
                        jpegQuality: 90,
                        interlace: true
                    }
                ) %}
                {% css %}
                    @media(min-width: 320px){
                    .slide-{{ block.id }}{
                    background-image: url('{{ baseUrl ~ transformedBannerImages[0].url }}');
                    height:380px;
                    }
                    }
                    @media(min-width: 550px){
                    .slide-{{ block.id }}{
                    background-image: url('{{ baseUrl ~ transformedBannerImages[1].url }}');
                    height:380px;
                    }
                    }
                    @media(min-width: 768px){
                    .slide-{{ block.id }}{
                    background-image: url('{{ baseUrl ~ transformedBannerImages[2].url }}');
                    height:480px;
                    }
                    }
                    @media(min-width: 990px){
                    .slide-{{ block.id }}{
                    background-image: url('{{ baseUrl ~ transformedBannerImages[3].url }}');
                    {#                        height:593px;#}
                    }
                    }

                    @media(min-width: 1200px){
                    .slide-{{ block.id }}{
                    background-image: url('{{ baseUrl ~ transformedBannerImages[4].url }}');
                    height:593px;
                    }
                    }


                {% endcss %}
            {% endif %}

            {% if block.buttonHoverColor | length %}
            {% css %}
                .hero-content a.btn:hover {
                    background-color: {{ block.buttonHoverColor }}!important
                }
            {% endcss %}
            {% endif %}

            {% if block.clockBackgroundColor | length and block.clockInsetColor | length  %}
                {% css %}
                    #clockdiv > div{
                    background-color: {{ block.clockBackgroundColor }}!important
                    }
                    #clockdiv div > span{
                    background-color: {{ block.clockInsetColor }}!important
                    }
                {% endcss %}
            {% endif %}




            {% switch block.type %}

            {% case "slide" %}

                <div class="slide-{{ block.id }} hero-slider-item  position-{{ block.position }} py-160 "
                     {% if block.tabTitle |length %}data-text="{{ block.tabTitle }}{% endif %}">
                    <div class="container d-flex">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="hero-content {{ block.position }}">
                                    {% if block.slideTitle |length %}
                                        <h4 class="text-uppercase mb-1 text-white {{ block.textColor }}"
                                            data-duration-in=".5"
                                            data-animation-in="fadeInLeft" data-delay-in=".1">
                                            {{ block.preTitle }}</h4>
                                    {% endif %}
                                    {% if block.slideTitle |length %}
                                        <h1 class="font-weight-bold mb-3 text-{{ block.textColor }} text-shadow {{ block.titleSize }}"
                                            data-duration-in=".2" data-animation-in="fadeInLeft"
                                            data-delay-in=".2"> {{ block.slideTitle|raw }}</h1>
                                    {% endif %}
                                    {% if block.intro |length %}
                                        <p class="text-white mb-50 text-{{ block.textColor }} text-shadow {{ block.textColor }}"
                                           data-duration-in=".5" data-animation-in="fadeIn" data-delay-in=".9">
                                            {{ block.intro |raw }} </p>
                                    {% endif %}
                                    {% if block.buttonLink | length %}
                                        <a data-duration-in=".5" data-animation-in="fadeInDown" data-delay-in="1.3"
                                           href="{{ block.buttonLink.one().url }}"
                                           class="btn btn-secondary text-uppercase text-{{ block.textColor }}"> {{ block.buttonText | default("more") }}</a>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {% case 'countdown' %}
                {%  js at head %}
                var countdowndeadline = '{{ block.countdownDate|date('D M d Y H:i:s')  }}';
                {% endjs %}
                <div class="slide-{{ block.id }} hero-slider-item  position-{{ block.position }} py-160 "
                     {% if block.tabTitle |length %}data-text="{{ block.tabTitle }}{% endif %}">
                    <div class="container d-flex justify-content-center">
                        <div class="row">
                            <div class="col-lg-12 justify-content-center">
                                <div class="hero-content text-{{ block.position }} justify-content-center">
                                    {% if block.slideTitle |length %}
                                        <h4 class="text-uppercase mb-1 text-white {{ block.textColor }}"
                                            >
                                            {{ block.preTitle }}</h4>
                                    {% endif %}
                                    {% if block.slideTitle |length %}
                                        <h1 class="font-weight-bold mb-3 text-{{ block.textColor }} text-shadow {{ block.titleSize }}"
                                            > {{ block.slideTitle|raw }}</h1>
                                    {% endif %}

                                    <div class="justify-content-center">
                                    <div id="clockdiv" class="d-block my-3">
                                        <div>
                                            <span class="days {{ block.textColor }}"></span>
                                            <div class="smalltext {{ block.textColor }}">Days</div>
                                        </div>
                                        <div class="mx-2">
                                            <span class="hours {{ block.textColor }}"></span>
                                            <div class="smalltext {{ block.textColor }}">Hours</div>
                                        </div>
                                        <div class="mx-2">
                                            <span class="minutes {{ block.textColor }}"></span>
                                            <div class="smalltext {{ block.textColor }}">Minutes</div>
                                        </div>
                                        <div>
                                            <span class="seconds {{ block.textColor }}"></span>
                                            <div class="smalltext {{ block.textColor }}">Seconds</div>
                                        </div>
                                    </div>
                                    </div>

                                    {% if block.intro |length %}
                                        <p class="d-none d-md-block slide-intro text-white mb-0 mb-xl-5 text-{{ block.textColor }} text-shadow {{ block.textColor }}"
                                           >
                                            {{ block.intro |raw }} </p>
                                    {% endif %}
                                    {% if block.buttonLink | length %}
                                        <a data-duration-in=".2" data-animation-in="fadeInDown" data-delay-in=".3"
                                           href="{{ block.buttonLink.one().url }}"
                                           class="btn btn-secondary text-uppercase text-{{ block.textColor }}"> {{ block.buttonText | default("more") }}</a>
                                    {% endif %}
                                    {% if block.customLink | length %}
                                        <a data-duration-in=".5" data-animation-in="fadeInDown" data-delay-in="1.3"
                                           href="{{ block.customLink }}"
                                           class="btn btn-secondary text-uppercase text-{{ block.textColor }}"> {{ block.buttonText | default("more") }}</a>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {%  case default %}
            {% endswitch %}
        {% endfor %}

    </div>
</section>
{# set pass slick option#}
{# set slick slider options #}
    {% set autoplay = "false" %}
    {% set arrows = "false" %}
    {% set dots = "false" %}
    {% set slideTotal = entry.carousel|length %}

{#    {% set autoplay = block.autoplay|raw %}#}
{#    {% set arrows = block.arrows %}#}
{% for block in entry.heroCarouselSettings.all() %}
    {% if block.tabs %}
        {% set dots = 'true' %}
    {% else %}
        {% css %}
            .hero-slider.slick-slider{margin-bottom:20px!important}
        {% endcss %}
    {% endif %}
    {% if block.autoplay %}
        {% set autoplay = "true" %}
    {% endif %}
    {# adust arrows display for no of slide - if only one slide then dont show #}
    {% if block.arrows %}
        {% if slideTotal == "1" %}
            {% set arrows = "false" %}
        {% else %}
            {% set arrows = "true" %}
        {% endif %}

    {% endif %}


    {% js %}

        $('.hero-slider').slick('slickSetOption', {
        dots:{{ dots }},
        arrows:{{ arrows }},
        autoplay:{{ autoplay }},
        autoplaySpeed: 8000
        }, true);




    {% endjs %}
{% endfor %}
<script>
    document.addEventListener('DOMContentLoaded', function (event) {
        function getTimeRemaining(endtime) {
            const total = Date.parse(endtime) - Date.parse(new Date());
            const seconds = Math.floor((total / 1000) % 60);
            const minutes = Math.floor((total / 1000 / 60) % 60);
            const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
            const days = Math.floor(total / (1000 * 60 * 60 * 24));

            return {
                total,
                days,
                hours,
                minutes,
                seconds
            };
        }

        function initializeClock(id, endtime) {
            const clock = document.getElementById(id);
            const daysSpan = clock.querySelector('.days');
            const hoursSpan = clock.querySelector('.hours');
            const minutesSpan = clock.querySelector('.minutes');
            const secondsSpan = clock.querySelector('.seconds');

            function updateClock() {
                const t = getTimeRemaining(endtime);

                daysSpan.innerHTML = t.days;
                hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

                if (t.total <= 0) {
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            const timeinterval = setInterval(updateClock, 1000);
        }

        const deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);

        initializeClock('clockdiv', countdowndeadline);
    });
</script>
